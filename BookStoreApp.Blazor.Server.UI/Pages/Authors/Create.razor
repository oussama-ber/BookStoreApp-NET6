@page "/authors/create/"
@inject IAuthorService authorService
@inject NavigationManager navManager

<h3>Create New Author</h3>
<EditForm Model="Author" OnValidSubmit="HandleCreateAuthor">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstname"> First Name</label>
        <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname" />
        <ValidationMessage For="@(()=>Author.FirstName)" />
    </div>
    <div class="form-group">
        <label for="lastName"> Last Name </label>
        <InputText @bind-Value="Author.LastName" class="form-control" id="lastName" />
        <ValidationMessage For="@(()=>Author.LastName)" />
    </div>
    <div class="form-group">
        <label for="bio"> Bio</label>
        <InputTextArea @bind-Value="Author.Bio" class="form-control" id="bio" />
        <ValidationMessage For="@(()=>Author.Bio)" />
    </div>

    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Create Author
    </button>

    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>
</EditForm>

@code {
    private AuthorCreateDto Author = new AuthorCreateDto();

    private async Task HandleCreateAuthor()
    {
        try
        {
            await authorService.CreateAuthor(Author);
        }
        catch (Exception)
        {

            throw;
        }
        BackToList();





    }
    private void BackToList()
    {
        Console.WriteLine("inside the backtolist method. ");
        navManager.NavigateTo("/authors/");
    }
}
